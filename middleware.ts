import { NextResponse } from "next/server"
import type { NextRequest } from "next/server"

export async function middleware(request: NextRequest) {
  const { pathname } = request.nextUrl

  console.log("üöÄ Middleware d√©clench√© pour:", pathname)

  // Routes admin qui n√©cessitent une authentification admin
  const adminRoutes = ["/admin"]
  const isAdminRoute = adminRoutes.some((route) => pathname.startsWith(route))

  // Routes qui n√©cessitent une authentification
  const protectedRoutes = ["/tenant/dashboard", "/owner/dashboard", "/messaging"]
  const isProtectedRoute = protectedRoutes.some((route) => pathname.startsWith(route))

  if (isAdminRoute) {
    console.log("üîí Route admin d√©tect√©e:", pathname)

    // Pour l'instant, on laisse passer pour d√©boguer
    console.log("‚ö†Ô∏è MIDDLEWARE ADMIN TEMPORAIREMENT D√âSACTIV√â")
    return NextResponse.next()
  }

  if (isProtectedRoute) {
    console.log("üîí Route prot√©g√©e d√©tect√©e:", pathname)

    // Pour l'instant, on laisse passer pour d√©boguer
    console.log("‚ö†Ô∏è MIDDLEWARE PROTECTION TEMPORAIREMENT D√âSACTIV√â")
    return NextResponse.next()
  }

  return NextResponse.next()
}

export const config = {
  matcher: ["/((?!api|_next/static|_next/image|favicon.ico).*)"],
}
