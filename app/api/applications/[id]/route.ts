import { type NextRequest, NextResponse } from "next/server"
import { applicationService } from "@/lib/application-service"
import { authService } from "@/lib/auth-service"

export async function GET(request: NextRequest, { params }: { params: { id: string } }) {
  try {
    const applicationId = params.id
    console.log("üìã API Applications GET by ID:", applicationId)

    const application = await applicationService.getApplicationById(applicationId)

    return NextResponse.json({
      success: true,
      application,
    })
  } catch (error) {
    console.error("‚ùå Erreur API application:", error)
    return NextResponse.json(
      {
        success: false,
        error: error.message || "Erreur lors de la r√©cup√©ration de la candidature",
      },
      { status: 500 },
    )
  }
}

export async function PATCH(request: NextRequest, { params }: { params: { id: string } }) {
  try {
    const applicationId = params.id
    const body = await request.json()
    console.log("üîÑ API Applications PATCH:", applicationId, body)

    // V√©rifier l'authentification
    const user = await authService.getCurrentUser()
    if (!user) {
      return NextResponse.json(
        {
          success: false,
          error: "Authentification requise",
        },
        { status: 401 },
      )
    }

    // V√©rifier que l'utilisateur est bien le propri√©taire
    if (user.user_type !== "owner") {
      return NextResponse.json(
        {
          success: false,
          error: "Acc√®s non autoris√©",
        },
        { status: 403 },
      )
    }

    // Mettre √† jour le statut de la candidature
    const { status, notes } = body
    const application = await applicationService.updateApplicationStatus(applicationId, status, notes)

    return NextResponse.json({
      success: true,
      application,
    })
  } catch (error) {
    console.error("‚ùå Erreur API mise √† jour candidature:", error)
    return NextResponse.json(
      {
        success: false,
        error: error.message || "Erreur lors de la mise √† jour de la candidature",
      },
      { status: 500 },
    )
  }
}
